<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tableLayoutPanel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>